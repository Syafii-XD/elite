# Obfuscated with PyObfuscate
# https://www.github.com/Syafii-XD
# Author : Muhammad Syafii
# Time : Sun Jun 26 03:19:15 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))